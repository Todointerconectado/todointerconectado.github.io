
.padre0 {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 60%;
    height: 150px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.hijos0 {
    background-color: rgb(29, 198, 142);
    margin: 5px;
    padding: 5px;
}
.padre1 {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre2 {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre3 {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre4 {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_space-between {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_space-around {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_space-evenly {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_align-items_stretch {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_align-items_center {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_align-items_flex-end {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_align-items_flex-start {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_align-self {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.hijos_flex-grow{
    background-color: rgb(29, 198, 142);
    margin: 5px;
    padding: 5px;
}

.padre_align-items {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.hijos_flex-grow_center{
    background-color: rgb(29, 198, 142);
    margin: 5px;
    padding: 5px;
}

.padre_flex-direction {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_flex-direction_row-reverse {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_flex-direction_column {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_flex-direction_column_center {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 80%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_flex-nowrap {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 60%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_flex-wrap {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 60%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_flex-wrap_center {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 60%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_flex-wrap_center_top {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 60%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}
.padre_flex-flow {
    border-radius: 5px;
    box-shadow: 5px 5px 5px black;
    width: 60%;
    height: 200px;
    background-color: rgb(164, 239, 214);
    margin: 10px auto;
}

/* --------------------------- Estilos de Muestra --------------------------- */
.padre1 {
    /* Los elemento de bloque se posicionaron con las siguientes caracteristicas: <br>
    El ancho de cada elemento hijo se ajusto al ancho del contenido. <br>
    La altura de cada contenido hijo se ajusto a la altura del elemento padre.
    Otro punto a tener en cuenta al trabajar con flexbox es el eje principal y secundario: <br>
    Eje principal: Por defecto viene horizontalmente al (eje X) <br>
    Eje secundario: Por defecto viene vertical al (eje Y) <br>
    Estos ejes sirven para alinear los elemento. <br>
    También, podriamos intercambiar su dirección.*/
    display: flex;
}
.padre2 {
    display: flex;
    justify-content: flex-start; /* Valor por defecto. */
}
.padre3 {
    display: flex;
    justify-content: flex-end; /* Los elemento se ubican a la derecha. */
}
.padre4 {
    display: flex;
    justify-content: center; /* Los elemento se ubican en el centro. */
}
.padre_space-between {
    display: flex;
    justify-content: space-between; /* Los elemento se ubican en el centro. Se crean espacios igules entre los elementos. Empezando con elementos en los lados. */
}
.padre_space-around {
    display: flex;
    justify-content: space-around; /* Se crean espacios iguales entre los elementos. En los lados empiezan con la mitad del espacio que tendrian de separación los elementos del medio. */
}
.padre_space-evenly {
    display: flex;
    justify-content: space-evenly /* Se crean espacios iguales entre los elementos. En los lados empiezan con espacios. */
}
.padre_align-items_stretch {
    display: flex;
    justify-content: flex-start;
    align-items: stretch; /* Por defecto */
}
.padre_align-items_center {
    display: flex;
    justify-content: flex-start;
    align-items: center; /* Centra los elementos al eje principal sobgre el eje Y. Tambien, el contenedor se adapta al tamaño del contenido. */
}
.padre_align-items_flex-end {
    display: flex;
    justify-content: flex-start;
    align-items: flex-end; /* Lo ubica en la parte inferior del eje principal. */
}
.padre_align-items_flex-start {
    display: flex;
    justify-content: flex-start;
    align-items: flex-start; /* Lo ubica en la parte superior del eje principal. */
}

/* ------- Para alinear elementos especificos ------- */
.padre_align-self {
    display: flex;
    justify-content: flex-start;
    align-self: flex-start;
}
.martes_align-self_flex-start {
    align-self: flex-start;
}
.martes_align-self_center {
    align-self: center;
}
.miercoles_align-self_flex-end {
    align-self: flex-end;
}

/* ---- Hago que cresca el elemento hijo si tiene espacio en el padre ---- */
.martes_flex-grow_0 {
    flex-grow: 0; /* Por defecto */
}
.martes_flex-grow_1 {
    flex-grow: 1; /* Con un 1 le digo al elemento que cresca si tiene espacio dentro del padre. */
}
.hijos_flex-grow {
    flex-grow: 1; /* les dijo que crescan y se ajustan equitativamente el espacio */
}

/*--------- Crecen y se ajustan los contenedores y el contenido se centra ---------*/
.padre_align-items{
    display: flex;
    justify-content: flex-start; /* Por defecto */
    align-items: flex-start;
}
.hijos_flex-grow_center {
    flex-grow: 1;
    display: flex;
    justify-content: center;
}

/*--------- Propiedad que permite que un elemento se encoja ---------*/
.miercoles_flex-basis {
    flex-basis: 300px;
    flex-shrink: 1;
}

/*-------- Forma simplificada en una linea --------*/
.martes_flex {
    flex: 0 1 250px; /* Orden: flex: grow shrink basis; */
}

/* Cambiar la dirección del eje plincipal con flex-direction y va dentro del elemento padre */
.padre_flex-direction {
    display: flex;
    justify-content: flex-start;  /* Por defecto */
    align-items: flex-start;
    flex-direction: row; /* Por defecto */
}
.padre_flex-direction_row-reverse {
    display: flex;
    justify-content: flex-start;  /* Por defecto */
    align-items: flex-start;
    flex-direction: row-reverse; /* Empiezan desde la derecha */
}
.padre_flex-direction_column {
    display: flex;
    justify-content: flex-start;  /* Por defecto */
    align-items: flex-start;
    flex-direction: column; /* El eje plincipal se ubica en el eje Y. */
}
.padre_flex-direction_column_center {
    display: flex;
    justify-content: flex-start;  /* Por defecto */
    align-items: flex-start;
    flex-direction: column; /* El eje plincipal se ubica en el eje Y. */
    align-items: center; /* Centramos al eje principal (Y) */
    justify-content: center; /* Centramos al eje secundario (X) */
}

/*--- Contener los elementos hijos dentro del elemento padre con flex-wrap: wrap; ---*/

.padre_flex-nowrap {
    display: flex;
    align-items: flex-start;
    flex-wrap: nowrap; /* por defecto */
}
.padre_flex-wrap {
    display: flex;
    align-items: flex-start;
    flex-wrap: wrap; /* Lo separa dentro del contenedor padre, debajo del eje principal */
}
.padre_flex-wrap_center {
    display: flex;
    align-content: center;
    flex-wrap: wrap; /* Lo separa dentro del contenedor padre, debajo del eje principal */
}
.padre_flex-wrap_center_top {
    display: flex;
    align-content: flex-start;
    flex-wrap: wrap; /* Lo separa dentro del contenedor padre, debajo del eje principal */
}

/*------- Escribir en una linea flex-direction y flex-wrap -------*/
.padre_flex-flow {
    display: flex;
    align-content: flex-start;
    flex-flow: row wrap;
}

/*--------------- Ordenar: Si le doy 1 se va al final ---------------*/
.martes_order {
    order: 1;
    background-color: yellow;
}

/* Animación en los contenedores */
details[open] summary ~ * {
    cursor: pointer;
    animation: sweep .5s ease;
}
@keyframes sweep {
    0% { opacity: 0; transform: translateY(-20px); }
    100% { opacity: 1; transform: translateY(0px); }
}